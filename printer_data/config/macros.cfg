[gcode_macro BEACON_VARS]
variable_beacon_contact_calibration_temp: 150                           # nozzle temperature for auto calibration
variable_adaptive_mesh: False                                           # REQUIRES zero_reference_position to be setup in [bed_mesh]
# Do not modify below
gcode:

[gcode_macro FAST_QGL]
gcode:
    M117 QUAD_GANTRY_LEVEL
    {% if printer.configfile.settings.quad_gantry_level %}
        {% if printer.quad_gantry_level.applied == False %}
            QUAD_GANTRY_LEVEL RETRY_TOLERANCE=1
        {% endif %}
        QUAD_GANTRY_LEVEL horizontal_move_z=2
    {% endif %} 

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}

    # Collecting variables
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% if printer.configfile.settings['beacon'].home_z_hop is defined %}
        {% set z_hop = printer.configfile.settings['beacon'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['beacon'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['beacon'].home_z_hop_speed|float %}
    {% else %}
        {% set z_hop = printer.configfile.settings['safe_z_home'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['safe_z_home'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['safe_z_home'].home_z_hop_speed|float %}
    {% endif %}
    {% set beacon_contact_calibration_temp = printer["gcode_macro BEACON_VARS"].beacon_contact_calibration_temp|default(150)|int %}
    {% set adaptive_meshing = printer["gcode_macro BEACON_VARS"].adaptive_mesh|default(false) %}

    {% if printer.toolhead.homed_axes != "xy" %}
        G28 XY                                                                                     # Partial home (XY)
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}
    G90                                                                                         # Absolute positioning

    BED_MESH_CLEAR                                                                              # Clears old saved bed mesh (if any)
    SET_GCODE_OFFSET Z=0                                                                        # Clears current offset

    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED|int > 90 %}
        M106 S255                                                                               # Turns on the Part cooling fans

        {% if printer.configfile.settings["output_pin nevermore"] is defined %}
            SET_PIN PIN=nevermore VALUE=1                                                       # Turns on nevermore if setup
        {% endif %}

        SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"                                               # Displays info
        M190 S{target_bed}                                                                      # Sets the target temp for the bed

        {% if printer.configfile.config["temperature_sensor chamber"] is defined %}
            SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"                                  # Displays info
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}       # Waits for chamber to reach desired temp
        {% endif %}

	# If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
        SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"                                               # Displays info
        M190 S{target_bed}                                                                      # Sets the target temp for the bed

        SET_DISPLAY_TEXT MSG="Soak for 5min"                                                    # Displays info
        G4 P300000                                                                              # Waits 5 min for the bedtemp to stabilize
    {% endif %}
	
	
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}
    
    # If you don't change build plates then you may remove this by commenting it out
    G28 Z METHOD=CONTACT CALIBRATE=1                                                            # Calibrate z offset and beacon model hot
    
    {% if printer.z_tilt is defined and not printer.z_tilt.applied %}
        SET_DISPLAY_TEXT MSG="Z-tilt adjust"                                                    # Displays info
        {% if printer.configfile.config["gcode_macro FAST_Z_TILT"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_Z_TILT                                                                     # Levels the buildplate via Z_TILT but FASTER
            {% endif %}
        {% else %}
            Z_TILT_ADJUST                                                                       # Levels the buildplate via Z_TILT
        {% endif %}
        G28 Z                                                                                   # Homes Z again after z_tilt_adjust
    {% endif %}

    {% if printer.quad_gantry_level is defined and not printer.quad_gantry_level.applied %}
        SET_DISPLAY_TEXT MSG="QGL"                                                              # Displays info
        {% if printer.configfile.config["gcode_macro FAST_QGL"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_QGL                                                                        # Levels the buildplate via QGL but FASTER
            {% endif %}
        {% else %}
            quad_gantry_level                                                                   # Levels the buildplate via QGL
        {% endif %}
        G28 Z                                                                                   # Homes Z again after QGL
    {% endif %}

    ##  comment if you want to load a previous mesh
    SET_DISPLAY_TEXT MSG="Bed mesh"                                                             # Displays info
    {% if adaptive_meshing %}
        bed_mesh_calibrate ADAPTIVE=1                                                           # Runs an adaptive bed mesh
    {% else %}
        bed_mesh_calibrate                                                                      # Runs a bed mesh 
    {% endif %}

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}

    G28 Z METHOD=CONTACT CALIBRATE=0                                                            # Calibrate z offset only after tilt/mesh


    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"                                           # Displays info 
    {% if printer.configfile.config["gcode_macro SMART_PARK"] is defined %}
        SMART_PARK                                                                              # Parks using KAMP
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}

	M107                                                                                        # Turns off partcooling fan
    M109 S{target_extruder}                                                                     # Heats the nozzle to printing temp
    
    {% if printer.configfile.config["gcode_macro _BEACON_SET_NOZZLE_TEMP_OFFSET"] is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET                                                          # Adds toolhead expansion offset (REQUIRES ADDITIONAL MACROS NOT BY DEFAULT Found at:https://github.com/YanceyA/Beacon_Thermal_Expansion_Compensation )
    {% endif %}

    SET_GCODE_OFFSET Z_ADJUST=0                                                                 # Apply any additional offset u wish to apply

    # Gets ready to print by doing a purge line
    SET_DISPLAY_TEXT MSG="Printer goes brr"                                                     # Displays info
    {% if printer.configfile.config["gcode_macro PURGE_NOZZLE"] is defined %}
        PURGE_NOZZLE                                                                            # Purges the nozzle via macro if setup
    {% elif printer.configfile.config["gcode_macro LINE_PURGE"] is defined %}
        LINE_PURGE                                                                              # Purges the nozzle using KAMP adaptive purging if setup
    {% elif printer.configfile.config["gcode_macro VORON_PURGE"] is defined %}
        VORON_PURGE                                                                             # Purges the nozzle using KAMP adaptive purging if setup
    {% endif %}
   
    G90                                                                                         # Absolute positioning
    
[gcode_macro PRINT_END]
gcode:
    M400                           # wait for buffer to clear
    G92 E0                         # zero the extruder
    G1 E-20.0 F3600                # retract filament
    G91                            # relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    G0 Z{z_safe} F3600             # move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  # move nozzle to remove stringing
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
    M107                           # turn off fan
    G90                            # absolute positioning
    G0 X60 Y{max_y-20} F3600  # park nozzle at rear
    SET_DISPLAY_TEXT MSG="Print Finished"          # Displays info
    M84
    UPDATE_DELAYED_GCODE ID=HEATER_DELAY DURATION=1800

[gcode_macro COOLDOWN]
gcode:
    UPDATE_DELAYED_GCODE ID=HEATER_DELAY DURATION=1

[delayed_gcode HEATER_DELAY]
gcode:
    TURN_OFF_HEATERS
    SET_FAN_SPEED FAN=3DPF SPEED=0
    
[gcode_macro LOAD_FILAMENT]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
   {% endif %}
   M83                            ; set extruder to relative
   G1 E35 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
   {% endif %}
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro M600]
gcode:
    {% set X = params.X|default(0)|float %}
    {% set Y = params.Y|default(100)|float %}
    {% set Z = params.Z|default(20)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state